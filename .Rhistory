mutate(across(c(catt_incidence, cam_incidence, goat_incidence), ~ ./1e6)) |>
mutate(human_incidence = human_incidence/1e3) |>
select(date, county, contains("cases"))
# Combined
df_comb_inci <- combined_county |>
mutate(human_incidence = human_incidence/1e3,
animal_incidence = animal_incidence/1e6
) |>
select(date, county, animal_incidence, human_incidence)
df_comb_cases <- combined_county |>
mutate(human_incidence = human_incidence/1e3,
animal_incidence = animal_incidence/1e6
) |>
select(date, county, animal_cases, hum_cases)
# Lags for individual incidence -----------------------------------------------------------------------------------
# lag 1
lag1_indivi_inci <- df_indivi_inci |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 1)))
# Lag 2
lag2_indivi_inci <- df_indivi_inci |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 2)))
# lag 3
lag3_indivi_inci <- df_indivi_inci |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 3)))
# lag 4
lag3_indivi_inci <- df_indivi_inci |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 4)))
# Lags for individual cases -----------------------------------------------------------------------------------
# lag 1
lag1_indivi_cases <- df_indivi_cases |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 1)))
# Lag 2
lag2_indivi_cases <- df_indivi_cases |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 2)))
# lag 3
lag3_indivi_cases <- df_indivi_cases |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 3)))
# lag 4
lag3_indivi_cases <- df_indivi_cases |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 4)))
# Lags for combined incidence -----------------------------------------------------------------------------------
# lag 1
lag1_comb_inci <- df_comb_inci |>
mutate(animal_incidence = lag(animal_incidence, n = 1))
# Lag 2
lag2_comb_inci <- df_comb_inci |>
mutate(animal_incidence = lag(animal_incidence, n = 2))
# lag 3
lag3_comb_inci <- df_comb_inci |>
mutate(animal_incidence = lag(animal_incidence, n = 3))
# lag 4
lag4_comb_inci <- df_comb_inci |>
mutate(animal_incidence = lag(animal_incidence, n = 4))
# Lags for individual cases -----------------------------------------------------------------------------------
# lag 1
lag1_comb_cases <- df_comb_cases |>
mutate(animal_cases = lag(animal_cases, n = 1))
# Lag 2
lag2_comb_cases <- df_comb_cases |>
mutate(animal_cases = lag(animal_cases, n = 2))
# lag 3
lag3_comb_cases <- df_comb_cases |>
mutate(animal_cases = lag(animal_cases, n = 3))
# lag 4
lag4_comb_cases <- df_comb_cases |>
mutate(animal_cases = lag(animal_cases, n = 4))
# Individual animal incidence
## No mixed effect binomial
binom_fixed_indi <- glm(human_incidence ~ catt_incidence + goat_incidence + cam_incidence + shp_incidence,
family = binomial(link = "logit"),
data = lag4_indivi_inci
)
# lag 4
lag4_indivi_cases <- df_indivi_cases |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 4)))
# lag 4
lag4_indivi_inci <- df_indivi_inci |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 4)))
# Individual animal incidence
## No mixed effect binomial
binom_fixed_indi <- glm(human_incidence ~ catt_incidence + goat_incidence + cam_incidence + shp_incidence,
family = binomial(link = "logit"),
data = lag4_indivi_inci
)
summary(binom_fixed_indi)
# Individual animal incidence
## No mixed effect binomial
binom_fixed_indi <- glm(human_incidence ~ catt_incidence + goat_incidence + cam_incidence + shp_incidence,
family = binomial(link = "logit"),
data = df_indivi_inci
)
summary(binom_fixed_indi)
# Individual animal incidence
## No mixed effect binomial
binom_fixed_indi <- glm(human_incidence ~ catt_incidence + goat_incidence + cam_incidence + shp_incidence,
family = binomial(link = "logit"),
data = lag1_indivi_inci
)
summary(binom_fixed_indi)
plot(df_comb_inci$human_incidence)
plot(df_comb_inci$human_incidence, type = "l")
# Individual animal incidence
## No mixed effect binomial
binom_fixed_indi <- glm(human_incidence ~ catt_incidence + goat_incidence + cam_incidence + shp_incidence,
family = binomial(link = "logit"),
data = lag2_indivi_inci
)
summary(binom_fixed_indi)
View(lag2_indivi_inci)
# lag 1
lag1_indivi_inci <- df_indivi_inci |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 1))) |>
filter(!is.na(catt_incidence) & !is.na(cam_incidence) & !is.na(goat_incidence) &. !is.na(shp_incidence) )
# lag 1
lag1_indivi_inci <- df_indivi_inci |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 1))) |>
filter(!is.na(catt_incidence) & !is.na(cam_incidence) & !is.na(goat_incidence) & !is.na(shp_incidence) )
View(lag1_indivi_inci)
lag1_indivi_inci <- df_indivi_inci |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 1)))
View(lag1_indivi_inci)
# lag 1
lag1_indivi_inci <- df_indivi_inci |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 1)))
View(lag1_indivi_inci)
# Lags for individual incidence -----------------------------------------------------------------------------------
# lag 1
lag1_indivi_inci <- df_indivi_inci |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 1)))
# filter(!is.na(catt_incidence) & !is.na(cam_incidence) & !is.na(goat_incidence) & !is.na(shp_incidence) )
# Lag 2
lag2_indivi_inci <- df_indivi_inci |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 2)))
# lag 3
lag3_indivi_inci <- df_indivi_inci |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 3)))
# lag 4
lag4_indivi_inci <- df_indivi_inci |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 4)))
# Lags for individual cases -----------------------------------------------------------------------------------
# lag 1
lag1_indivi_cases <- df_indivi_cases |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 1)))
# Lag 2
lag2_indivi_cases <- df_indivi_cases |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 2)))
# lag 3
lag3_indivi_cases <- df_indivi_cases |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 3)))
# lag 4
lag4_indivi_cases <- df_indivi_cases |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_cases, cam_cases, goat_cases, shp_cases),
list( ~ lag(., n = 4)))
# Lags for combined incidence -----------------------------------------------------------------------------------
# lag 1
lag1_comb_inci <- df_comb_inci |>
group_by(county) |>
arrange(date) |>
mutate(animal_incidence = lag(animal_incidence, n = 1))
# Lag 2
lag2_comb_inci <- df_comb_inci |>
group_by(county) |>
arrange(date) |>
mutate(animal_incidence = lag(animal_incidence, n = 2))
# lag 3
lag3_comb_inci <- df_comb_inci |>
group_by(county) |>
arrange(date) |>
mutate(animal_incidence = lag(animal_incidence, n = 3))
# lag 4
lag4_comb_inci <- df_comb_inci |>
group_by(county) |>
arrange(date) |>
mutate(animal_incidence = lag(animal_incidence, n = 4))
# Lags for individual cases -----------------------------------------------------------------------------------
# lag 1
lag1_comb_cases <- df_comb_cases |>
mutate(animal_cases = lag(animal_cases, n = 1))
# Lag 2
lag2_comb_cases <- df_comb_cases |>
mutate(animal_cases = lag(animal_cases, n = 2))
# lag 3
lag3_comb_cases <- df_comb_cases |>
mutate(animal_cases = lag(animal_cases, n = 3))
# lag 4
lag4_comb_cases <- df_comb_cases |>
mutate(animal_cases = lag(animal_cases, n = 4))
View(lag1_indivi_cases)
df_indivi_inci <- individual_county |>
mutate(across(c(catt_incidence, cam_incidence, goat_incidence), ~ ./1e6)) |>
mutate(human_incidence = human_incidence/1e3) |>
select(date, county, contains("incidence")) |>
mutate(across(where(is.numeric), ~ifelse(is.na(.), 0, .)))
df_indivi_cases <- individual_county |>
mutate(across(c(catt_incidence, cam_incidence, goat_incidence), ~ ./1e6)) |>
mutate(human_incidence = human_incidence/1e3) |>
select(date, county, contains("cases")) |>
# Combined
df_comb_inci <- combined_county |>
mutate(human_incidence = human_incidence/1e3,
animal_incidence = animal_incidence/1e6
) |>
select(date, county, animal_incidence, human_incidence)
df_indivi_cases <- individual_county |>
mutate(across(c(catt_incidence, cam_incidence, goat_incidence), ~ ./1e6)) |>
mutate(human_incidence = human_incidence/1e3) |>
select(date, county, contains("cases")) |>
mutate(across(where(is.numeric), ~ifelse(is.na(.), 0, .)))
# Combined
df_comb_inci <- combined_county |>
mutate(human_incidence = human_incidence/1e3,
animal_incidence = animal_incidence/1e6
) |>
select(date, county, animal_incidence, human_incidence)|>
mutate(across(where(is.numeric), ~ifelse(is.na(.), 0, .)))
df_comb_cases <- combined_county |>
mutate(human_incidence = human_incidence/1e3,
animal_incidence = animal_incidence/1e6
) |>
select(date, county, animal_cases, hum_cases) |>
mutate(across(where(is.numeric), ~ifelse(is.na(.), 0, .)))
# lag 1
lag1_indivi_inci <- df_indivi_inci |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 1)))
View(lag1_indivi_inci)
df_indivi_inci
View(df_indivi_inci)
# lag 1
lag1_indivi_inci <- df_indivi_inci |>
group_by(county) |>
arrange(date) |>
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = 1)))
View(lag1_indivi_inci)
colSums(is.na(df_indivi_inci))
View(df_indivi_inci
)
df_indivi_inci <- individual_county |>
mutate(across(c(catt_incidence, cam_incidence, goat_incidence), ~ ./1e6)) |>
mutate(human_incidence = human_incidence/1e3) |>
select(date, county, contains("incidence"))
View(df_indivi_inci)
View(df_comb_inci)
View(df_comb_cases)
View(df_incidence)
View(df_numbers)
View(individual)
plot(individual$date, individual$human_incidence, type = "l")
View(df_incidence)
101/8027
1-(101/8027)
auto.arima(individual$human_incidence)
View(individual)
individual |> select(date, catt_incidence) |> View()
individual |> select(date, cam_incidence) |> View()
setwd("~/Documents/GitHub/brucellosis/trends")
library(tidyverse)
library(ggplot2)
trend<- read_csv("report_trend_2012-2023.csv")
head(trend)
Trend1<-trend%>%
select(Year, quarter, "No of Reports", "No of Counties")%>%
mutate(quarter=recode(quarter, "Q1"="03", "Q2"="06", "Q3"="09", "Q4"="12"))%>%
rename("reports" = "No of Reports", "counties" = "No of Counties" )%>%
mutate(date=as.Date(paste0(as.character(Year)," ", quarter," ", "01"),"%Y %m %d"))
head(Trend1)
colors<-c("Number of reports"="red", "Number of counties"="blue")
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
labs(color="", x="Year")+
theme(
axis.title.y = element_text(color = "blue"),
axis.title.y.right = element_text(color = "red"),
text=element_text(face="bold", size=16),
axis.text.x = element_text(angle = 90, vjust = 0.5),
legend.position = "top")+
scale_color_manual(values=colors)
library(scales)
trend<- read_csv("report_trend_2012-2023.csv")
View(Trend1)
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
scale_x_date(labels = "%Y")
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
scale_x_date(
labels = scales::date_format("%Y"),
breaks = scales::date_breaks("1 year")
)
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
scale_x_date(
labels = scales::date_format("%Y"),
breaks = scales::date_breaks("1 year")
) +
labs(color="", x="Year")+
theme(
axis.title.y = element_text(color = "blue"),
axis.title.y.right = element_text(color = "red"),
text=element_text(face="bold", size=16),
axis.text.x = element_text(angle = 90, vjust = 0.5),
legend.position = "top")+
scale_color_manual(values=colors)
ggsave("Trend_of_reports2.png", width=14, height=8)
ggsave("Trend_of_reports2.png", width=14, height=8, units = c("cm"))
dev.off()
ggsave("Trend_of_reports2.png", width=14, height=8, units = c("cm"))
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
scale_x_date(
labels = scales::date_format("%Y"),
breaks = scales::date_breaks("1 year")
) +
labs(color="", x="Year")+
theme(
axis.title.y = element_text(color = "blue"),
axis.title.y.right = element_text(color = "red"),
text=element_text(face="bold", size=16),
axis.text.x = element_text(angle = 90, vjust = 0.5),
legend.position = "top")+
scale_color_manual(values=colors)
dev.off()
ggsave("Trend_of_reports2.png", width=14, height=8, units = c("cm"))
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
scale_x_date(
labels = scales::date_format("%Y"),
breaks = scales::date_breaks("1 year")
) +
labs(color="", x="Year")+
theme(
axis.title.y = element_text(color = "blue"),
axis.title.y.right = element_text(color = "red"),
text = element_text(face="bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5),
legend.position = "top")+
scale_color_manual(values=colors)
dev.off()
ggsave("Trend_of_reports2.png", width=14, height=8, units = c("cm"))
ggsave("Trend_of_reports2.png", width=10, height=5, units = c("cm"), dpi = 1000)
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
scale_x_date(
labels = scales::date_format("%Y"),
breaks = scales::date_breaks("1 year")
) +
labs(color="", x="Year")+
theme(
axis.title.y = element_text(color = "blue"),
axis.title.y.right = element_text(color = "red"),
text = element_text(face="bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5),
legend.position = "top")+
scale_color_manual(values=colors)
dev.off()
ggsave("Trend_of_reports2.png", width=10, height=5, units = c("cm"), dpi = 1000)
ggsave("Trend_of_reports2.png", width=14, height=8, units = c("cm"), dpi = 1000)
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
scale_x_date(
labels = scales::date_format("%Y"),
breaks = scales::date_breaks("1 year")
) +
labs(color="", x="Year")+
theme(
axis.title.y = element_text(color = "blue"),
axis.title.y.right = element_text(color = "red"),
#text = element_text(face="bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5),
legend.position = "top")+
scale_color_manual(values=colors)
dev.off()
ggsave("Trend_of_reports2.png", width=14, height=8, units = c("cm"), dpi = 1000)
ggplot()+
geom_smooth(data=Trend1, aes(x=date, y=reports, color="Number of reports"))+
geom_point(data=Trend1, aes(x=date, y=reports, color="Number of reports"), size=0.75 )+
theme_bw()+
geom_smooth(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"))+
geom_point(data=Trend1, aes(x=date, y=counties*70, color="Number of counties"),size=0.75)+
scale_y_continuous(breaks=c(seq(0,3600, by=300)),
name = "Number of reports",
sec.axis = sec_axis(~./40,breaks = c(seq(0,90,10)),
name = "Proportion of counties",
labels = function(b) { paste0(round(b, 0), "%")}))+
scale_x_date(
labels = scales::date_format("%Y"),
breaks = scales::date_breaks("1 year")
) +
labs(color="", x="Year")+
theme(
axis.title.y = element_text(color = "blue"),
axis.title.y.right = element_text(color = "red"),
#text = element_text(face="bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5),
legend.position = "top")+
scale_color_manual(values=colors)
dev.off()
ggsave("Trend_of_reports2.png", width=14, height=8, units = c("cm"), dpi = 1000)
