trend_data_smoothed <- smoothed_df %>%
select(date, contains("smoothed")) %>%
pivot_longer(cols = -date) %>%
mutate(
name = factor(name, levels = order),
name = factor(name, labels = c(
"Human Incidence", "Cattle Incidence", "Goat Incidence",
"Sheep Incidence", "Camel Incidence"
))
)
species_sm_plt <- trend_data_smoothed |>
filter(name != "Human Incidence") |>
ggplot(aes(x = date)) +
geom_line(aes(y = value, col = name), linewidth = 1) +
# facet_wrap(~name, scales = "free", ncol = 3) +
theme_light() +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000,000 population") +
xlab("Year") +
labs(col = "Species", title = "Smoothed Incidence rate for cattle, goats, sheep and camels")
species_sm_plt
# With points
species_sm_plt_points <- trend_data_smoothed |>
filter(name != "Human Incidence") |>
ggplot(aes(x = date)) +
geom_line(aes(y = value, col = name), linewidth = 1) +
geom_point(data = trend_data |>
filter(name != "Human Incidence"),
aes(y = value, col = name), size = 1) +
# facet_wrap(~name, scales = "free", ncol = 3) +
theme_light() +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000,000 population") +
xlab("Year") +
labs(col = "Species", title = "Smoothed Incidence rate for cattle, goats, sheep and camels")
species_sm_plt_points
View(trend_data_smoothed)
trend_data
# With points
species_sm_plt_points <- trend_data_smoothed |>
filter(name != "Human Incidence") |>
ggplot(aes(x = date)) +
geom_line(aes(y = value, col = name), linewidth = 1) +
geom_point(data = trend_data |>
mutate(value = ifelse(is.na(value), 0, value)) |>
filter(name != "Human Incidence"),
aes(y = value, col = name), size = 1) +
# facet_wrap(~name, scales = "free", ncol = 3) +
theme_light() +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000,000 population") +
xlab("Year") +
labs(col = "Species", title = "Smoothed Incidence rate for cattle, goats, sheep and camels")
species_sm_plt_points
humans_sm_plt <- trend_data_smoothed |>
filter(name == "Human Incidence") |>
ggplot(aes(x = date)) +
geom_line(aes(y = value), linewidth = 1) +
geom_point(data = df_1_trend, aes(y = human_incidence), col = "red") +
# facet_wrap(~name, scales = "free", ncol = 3) +
theme_light() +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000 population") +
xlab("Year") +
labs(col = "Species", title = "Smoothed incidence rate for humans")
humans_sm_plt
## For all animal incidence combined
df_cum_trend <- df_cum_trend |>
mutate(date = as.Date(date))
incidence_cols_cum <- grep("incidence", names(df_cum_trend), value = TRUE)
# Apply moving average smoothing to selected columns
# Select columns containing "incidence"
incidence_cols <- grep("incidence", names(df_cum_trend), value = TRUE)
# Apply moving average smoothing to selected columns
smoothed_df_combined <- df_cum_trend %>%
as_tibble() |>
mutate(across(
all_of(incidence_cols),
~ zoo::rollmean(., k = 2, fill = NA),
.names = "smoothed_{.col}"
)) |>
na.omit()
animal_sm_plt <- smoothed_df_combined |>
ggplot(aes(x = date)) +
geom_line(aes(y = smoothed_animal_incidence), linewidth = 1) +
geom_point(data = df_cum_trend, aes(y = animal_incidence), col = "red") +
# facet_wrap(~name, scales = "free", ncol = 3) +
theme_light() +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000,000 population") +
xlab("Year") +
labs(col = "Species", title = "Smoothed incidence rate for animal incidence combined")
animal_sm_plt
df_cum_trend
# Apply moving average smoothing to selected columns
smoothed_df_combined <- df_cum_trend %>%
mutate(animal_incidence = ifelse(is.na(animal_incidence), 0, animal_incidence)) |>
as_tibble() |>
mutate(across(
all_of(incidence_cols),
~ zoo::rollmean(., k = 2, fill = NA),
.names = "smoothed_{.col}"
)) |>
na.omit()
animal_sm_plt <- smoothed_df_combined |>
ggplot(aes(x = date)) +
geom_line(aes(y = smoothed_animal_incidence), linewidth = 1) +
geom_point(data = df_cum_trend, aes(y = animal_incidence), col = "red") +
# facet_wrap(~name, scales = "free", ncol = 3) +
theme_light() +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000,000 population") +
xlab("Year") +
labs(col = "Species", title = "Smoothed incidence rate for animal incidence combined")
animal_sm_plt
df_cum_trend
animal_sm_plt <- smoothed_df_combined |>
ggplot(aes(x = date)) +
geom_line(aes(y = smoothed_animal_incidence), linewidth = 1) +
geom_point(data = df_cum_trend |>
mutate(animal_incidence = ifelse(is.na(animal_incidence), 0, animal_incidence))
, aes(y = animal_incidence), col = "red") +
# facet_wrap(~name, scales = "free", ncol = 3) +
theme_light() +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000,000 population") +
xlab("Year") +
labs(col = "Species", title = "Smoothed incidence rate for animal incidence combined")
animal_sm_plt
table1.1 <- df_incidence |>
select(county, diagnosis, contains("cases")) |>
pivot_longer(cols = -c(county, diagnosis)) %>%
group_by(name) |>
group_by(name, Diagnosis = diagnosis) |>
summarise(Cases = sum(value, na.rm = T)) |>
mutate(
Species = recode(
name,
"cam_cases" = 'Camels',
"hum_cases" = 'Humans',
"goat_cases" = 'Goats',
"shp_cases" = "Sheep",
"catt_cases" = "Cattle"
)
) |>
ungroup() |>
select(-name) |>
group_by(Species, Diagnosis) |>
group_by(Species) |>
mutate(`Percent(%)` = round((Cases/sum(Cases)) * 100, 2)) |>
select(3, 1,2,4) |>
knitr::kable(align = "l",
caption = "Number of cases according to the type of Diagnosis",
format = "pipe",
latex_options = "hold_position")
# The descriptive statistics are for the Incidence Rate National Wide
table2 <- df_1 %>%
select(county, contains("incidence")) |>
pivot_longer(cols = -1) %>%
group_by(name) %>%
summarise(
`Mean Incidence Rate` = mean(value, na.rm = TRUE),
minimum = min(value, na.rm = TRUE),
median = median(value, na.rm = TRUE),
max = max(value, na.rm = TRUE),
sd = sd(value, na.rm = TRUE)
) %>%
arrange(desc(`Mean Incidence Rate`)) %>%
mutate(
name = c("Human", "Goat", "Cattle", "Camel", "Sheep"),
Cases = comma(`Mean Incidence Rate`),
Minimum = comma(minimum),
Median = comma(median),
Maximum = comma(max),
`Standard Deviation` = comma(sd)
) %>%
select(Species = name, `Mean Incidence Rate`, Minimum, Median, Maximum, `Standard Deviation`) |>
knitr::kable(align = "l",
caption = "Descriptive Statistics for Incidence Rate",
format = "pipe", latex_options = "hold_position")
table2
table1.1
non_diff_indivi <- run_lag_models(df_1_trend)
df_1_trend
non_diff_indivi <- run_lag_models(na.omit(df_1_trend))
run_lag_models <- function(df, max_lag = 6, ...) {
result_df <- tibble()
for (lag_value in 0:max_lag) {
df_lagged <- df |>
as_tibble() %>%
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = lag_value, na.rm = T))) |>
na.omit() |>
mutate(date = as.Date(date))
mod <- df_lagged |>
as_tsibble() |>
model(
TSLM(
(human_incidence) ~ cam_incidence + shp_incidence + catt_incidence + goat_incidence
)
) |>
report()
mod_results <- tidy(mod) %>%
select(-.model) %>%
as_tibble() %>%
mutate(term = case_when(
term == "goat_incidence" ~ "Goat Incidence",
term == "catt_incidence" ~ "Cattle incidence",
term == "shp_incidence" ~ "Sheep incidence",
term == "cam_incidence" ~ "Camel incidence",
TRUE ~ as.character(term)
),
variable = term
) |>  select(6, 2:5) |>
group_by(variable) %>%
mutate(
conf_low = min(estimate - std.error * 1.645),
conf_high = max(estimate + std.error * 1.645)
) %>%
mutate(lag = lag_value)
result_df <- bind_rows(result_df, mod_results) |>
mutate(across(c(estimate, std.error, statistic, p.value, conf_low, conf_high), ~round(., 3))) |>
mutate(significance = ifelse(conf_low * conf_high > 0, "Significant", "Not Significant"))
}
return(result_df)
}
non_diff_indivi <- run_lag_models(df_1_trend)
lag(df_1_trend$human_incidence)
lag(df_1_trend$catt_incidence)
non_diff_indivi <- run_lag_models(df_1_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(., 0, .))))
)
df_1_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(., 0, .)))
)
non_diff_indivi <- run_lag_models(df_1_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .)))
)
run_lag_models <- function(df, max_lag = 6, ...) {
result_df <- tibble()
for (lag_value in 0:max_lag) {
df_lagged <- df |>
as_tibble() %>%
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = lag_value))) |>
na.omit() |>
mutate(date = as.Date(date))
mod <- df_lagged |>
as_tsibble() |>
model(
TSLM(
(human_incidence) ~ cam_incidence + shp_incidence + catt_incidence + goat_incidence
)
) |>
report()
mod_results <- tidy(mod) %>%
select(-.model) %>%
as_tibble() %>%
mutate(term = case_when(
term == "goat_incidence" ~ "Goat Incidence",
term == "catt_incidence" ~ "Cattle incidence",
term == "shp_incidence" ~ "Sheep incidence",
term == "cam_incidence" ~ "Camel incidence",
TRUE ~ as.character(term)
),
variable = term
) |>  select(6, 2:5) |>
group_by(variable) %>%
mutate(
conf_low = min(estimate - std.error * 1.645),
conf_high = max(estimate + std.error * 1.645)
) %>%
mutate(lag = lag_value)
result_df <- bind_rows(result_df, mod_results) |>
mutate(across(c(estimate, std.error, statistic, p.value, conf_low, conf_high), ~round(., 3))) |>
mutate(significance = ifelse(conf_low * conf_high > 0, "Significant", "Not Significant"))
}
return(result_df)
}
non_diff_indivi <- run_lag_models(df_1_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .)))
)
non_diff_indivi
View(non_diff_indivi)
View(non_diff_indivi)
mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .)))
non_diff_full <- lag_models_full(df_cum_trend |>
non_diff_full <- lag_models_full(df_cum_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .))))
)
non_diff_full <- lag_models_full(df_cum_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .))))
lag_models_full <- function(df, max_lag = 6, ...) {
result_df <- tibble()
for (lag_value in 0:max_lag) {
df_lagged <- df |>
as_tibble() %>%
mutate_at(vars(animal_incidence),
list( ~ lag(., n = lag_value))) |>
na.omit() |>
mutate(date = as.Date(date))
mod <- df_lagged |>
as_tsibble() |>
model(
TSLM(
(human_incidence) ~ animal_incidence
)
) |>
report()
mod_results <- tidy(mod) %>%
select(-.model) %>%
as_tibble() %>%
mutate(term = case_when(
term == "animal_incidence" ~ "Animal Incidence",
TRUE ~ as.character(term)
),
variable = term
) |>  select(6, 2:5) |>
group_by(variable) %>%
mutate(
conf_low = min(estimate - std.error * 1.645),
conf_high = max(estimate + std.error * 1.645)
) %>%
mutate(lag = lag_value)
result_df <- bind_rows(result_df, mod_results) |>
mutate(across(c(estimate, std.error, statistic, p.value, conf_low, conf_high), ~round(., 3))) |>
mutate(significance = ifelse(conf_low * conf_high > 0, "Significant", "Not Significant"))
}
return(result_df)
}
non_diff_full <- lag_models_full(df_cum_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .))))
View(non_diff_full)
df_cum_trend
df_cum_trend |>
na.omit()
non_diff_full <- lag_models_full(df_cum_trend |>
na.omit())
View(non_diff_full)
non_diff_indivi <- run_lag_models(df_1_trend |>
na.omit()
# mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .)))
)
df_1_trend |>
na.omit()
df_1_trend
View(df_1_trend)
run_lag_models <- function(df, max_lag = 6, ...) {
result_df <- tibble()
for (lag_value in 0:max_lag) {
df_lagged <- df |>
as_tibble() %>%
mutate_at(vars(catt_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = lag_value))) |>
na.omit() |>
mutate(date = as.Date(date))
mod <- df_lagged |>
as_tsibble() |>
model(
TSLM(
(human_incidence) ~ shp_incidence + catt_incidence + goat_incidence
)
) |>
report()
mod_results <- tidy(mod) %>%
select(-.model) %>%
as_tibble() %>%
mutate(term = case_when(
term == "goat_incidence" ~ "Goat Incidence",
term == "catt_incidence" ~ "Cattle incidence",
term == "shp_incidence" ~ "Sheep incidence",
#term == "cam_incidence" ~ "Camel incidence",
TRUE ~ as.character(term)
),
variable = term
) |>  select(5, 2:4) |>
group_by(variable) %>%
mutate(
conf_low = min(estimate - std.error * 1.645),
conf_high = max(estimate + std.error * 1.645)
) %>%
mutate(lag = lag_value)
result_df <- bind_rows(result_df, mod_results) |>
mutate(across(c(estimate, std.error, statistic, p.value, conf_low, conf_high), ~round(., 3))) |>
mutate(significance = ifelse(conf_low * conf_high > 0, "Significant", "Not Significant"))
}
return(result_df)
}
df_1_trend |>
na.omit()
View(df_1_trend)
df_1_trend |>
select(-cam_incidence) |>
na.omit()
View(df_1_trend)
non_diff_indivi <- run_lag_models(df_1_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .)))
)
run_lag_models <- function(df, max_lag = 6, ...) {
result_df <- tibble()
for (lag_value in 0:max_lag) {
df_lagged <- df |>
as_tibble() %>%
mutate_at(vars(catt_incidence, cam_incidence, goat_incidence, shp_incidence),
list( ~ lag(., n = lag_value))) |>
na.omit() |>
mutate(date = as.Date(date))
mod <- df_lagged |>
as_tsibble() |>
model(
TSLM(
(human_incidence) ~ cam_incidence + shp_incidence + catt_incidence + goat_incidence
)
) |>
report()
mod_results <- tidy(mod) %>%
select(-.model) %>%
as_tibble() %>%
mutate(term = case_when(
term == "goat_incidence" ~ "Goat Incidence",
term == "catt_incidence" ~ "Cattle incidence",
term == "shp_incidence" ~ "Sheep incidence",
term == "cam_incidence" ~ "Camel incidence",
TRUE ~ as.character(term)
),
variable = term
) |>  select(6, 2:5) |>
group_by(variable) %>%
mutate(
conf_low = min(estimate - std.error * 1.645),
conf_high = max(estimate + std.error * 1.645)
) %>%
mutate(lag = lag_value)
result_df <- bind_rows(result_df, mod_results) |>
mutate(across(c(estimate, std.error, statistic, p.value, conf_low, conf_high), ~round(., 3))) |>
mutate(significance = ifelse(conf_low * conf_high > 0, "Significant", "Not Significant"))
}
return(result_df)
}
non_diff_indivi <- run_lag_models(df_1_trend |>
mutate(across(contains('incidence'), ~ifelse(is.na(.), 0, .)))
)
