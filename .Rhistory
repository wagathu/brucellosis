xts,
feasts,
cowplot,
broom,
kableExtra,
readxl,
stringi,
stringr,
rKenyaCensus,
knitr,
purrr,
RColorBrewer
)
}
# Importing Datasets ---------------------------------------------------------------------
df_22_human <- fread('county_human_2022_brucellosis.csv')
df_22_animal <- read_excel("animal_brucellosis_2022.xlsx")
p09 <- read_excel("Projections.xlsx", sheet = "2009")
p19 <- read_excel("Projections.xlsx", sheet = "2019")
df_incidence <- fread("all_bruc_incidence.csv")
df_numbers <- fread("all_bruc_pop.csv")
shp <- st_read("shapefiles/County.shp", quiet = T)
eco_zones <- fread("eco_zones_county.csv")
shp <- st_read("shapefiles/County.shp", quiet = T)
# Cleaning population data ---------------------------------------------------------------
# 2009
colnames(p09) <- p09[1,] #Make the 1st row the header
p09 <- p09[-1, ]  #Remove the 1st row
p09_clean <- p09 |>
filter(
!County %in% c(
"Kenya",
"Central",
"Coast",
"Eastern",
"Western",
"N. Eastern",
"Nyanza",
"R. Valley"
)
) |>
distinct() |>
select(County, "2014", "2015")
# 2009
colnames(p09) <- p09[1,] #Make the 1st row the header
p09 <- p09[-1, ]  #Remove the 1st row
p09_clean <- p09 |>
filter(
!County %in% c(
"Kenya",
"Central",
"Coast",
"Eastern",
"Western",
"N. Eastern",
"Nyanza",
"R. Valley"
)
) |>
distinct() |>
select(County, "2014", "2015")
p09
p09_clean <- p09 |>
filter(
!County %in% c(
"Kenya",
"Central",
"Coast",
"Eastern",
"Western",
"N. Eastern",
"Nyanza",
"R. Valley"
)
)
p09
df_22_human <- fread('county_human_2022_brucellosis.csv')
df_22_animal <- read_excel("animal_brucellosis_2022.xlsx")
p09 <- read_excel("Projections.xlsx", sheet = "2009")
p19 <- read_excel("Projections.xlsx", sheet = "2019")
p09
p19
p09_clean <- p09 |>
filter(
!County %in% c(
"Kenya",
"Central",
"Coast",
"Eastern",
"Western",
"N. Eastern",
"Nyanza",
"R. Valley"
)
)
# 2009
colnames(p09) <- p09[1,] #Make the 1st row the header
p09
p09 <- p09[-1, ]  #Remove the 1st row
p09
p09_clean <- p09 |>
filter(
!County %in% c(
"Kenya",
"Central",
"Coast",
"Eastern",
"Western",
"N. Eastern",
"Nyanza",
"R. Valley"
)
)
p09_clean
p09_clean <- p09 |>
filter(
!County %in% c(
"Kenya",
"Central",
"Coast",
"Eastern",
"Western",
"N. Eastern",
"Nyanza",
"R. Valley"
)
) |>
distinct() |>
select(County, "2014", "2015")
p09_clean <- p09 |>
filter(
!County %in% c(
"Kenya",
"Central",
"Coast",
"Eastern",
"Western",
"N. Eastern",
"Nyanza",
"R. Valley"
)
) |>
distinct() |>
select(County, `2014`, `2015`)
source('clean_all_data.R')
# Identifying the outliers in the number of cases
numeric_columns <- df_incidence2.1 %>%
select(contains('cases')) |>
keep(is.numeric)
# Identifying the outliers in the number of cases
numeric_columns <- df_incidence2.1 %>%
dplyr::select(contains('cases')) |>
keep(is.numeric)
numeric_columns %>%
map(~summary(.))
numeric_columns %>%
imap(
~ ggplot(data = data.frame(y = .x)) +
geom_boxplot(aes(x = 1, y = y)) +
labs(title = .y) +
theme_light()
)
# Replacing the outliers with the mean
df_incidence2 <- df_incidence2.1 |>
mutate(
catt_cases = ifelse(catt_cases >= 69, round(mean(catt_cases, na.rm = T)), catt_cases),
goat_cases = ifelse(goat_cases > 28, round(mean(goat_cases, na.rm = T)), goat_cases)
) |>
mutate(date = as.Date(date))
df_tot_cases <- df_incidence2 |>
group_by(date, county) |>
summarise(across(contains("cases"), ~ sum(., na.rm = T)))
# Population per year, per county
df_pop <- df_incidence2 |>
dplyr::select(date, county, contains("pop")) %>%
distinct(.) |>
as_tibble() |>
group_by(date, county) %>%
summarise(across(where(is.numeric), ~unique(.)))
df_1 <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
filter(!is.na(date)) |>
mutate(
human_incidence = round((hum_cases / pop) * 1000, 4),
catt_incidence = round((catt_cases / catt_pop) * 1000000, 4),
cam_incidence = round((cam_cases / cam_pop) * 1000000, 4),
goat_incidence = round((goat_cases / goat_pop) * 1000000, 4),
shp_incidence = round((shp_cases / sheep_pop) * 1000000, 4)
) |>
dplyr::select(date, county, contains(c("incidence", "cases"))) |>
as_tibble() |>
arrange(county)
df_1_pop <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
dplyr::select(date, county, pop)
write.csv(df_1_pop, 'county_humanpop.csv', row.names = F)
df_1_complete <- df_1 |>
dplyr::select(
date,
county,
human_incidence,
catt_incidence,
goat_incidence,
hum_cases,
catt_cases,
goat_cases
) |>
filter(catt_incidence > 0)
write.csv(df_1_complete, "df_1_complete.csv", row.names = F)
# Outliers
numeric_columns <- df_1 %>%
dplyr::select(contains('incidence')) |>
keep(is.numeric)
numeric_columns %>%
map(~summary(.))
numeric_columns %>%
imap(
~ ggplot(data = data.frame(y = .x)) +
geom_boxplot(aes(x = 1, y = y)) +
labs(title = .y) +
theme_light()
)
df_cum <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
filter(!is.na(date)) |>
rowwise() |>
mutate(
animal_cases = sum(catt_cases, goat_cases, shp_cases, cam_cases, na.rm = T),
animal_pop = sum(catt_pop, goat_pop, sheep_pop, cam_pop, na.rm = T),
animal_cases = ifelse(animal_cases == 0, NA, animal_cases),
animal_incidence = round((animal_cases / animal_pop) * 1000000, 4),
human_incidence = round((hum_cases / pop) * 1000, 4)
) |>
dplyr::select(date, county, contains(c("incidence", 'cases'))) |>
as_tibble() |>
mutate()
df_cum_complete <- df_cum |>
dplyr::select(date, county, human_incidence, animal_incidence, animal_cases, hum_cases) |>
filter(animal_incidence > 0)
write.csv(df_cum_complete, "df_cum_complete.csv", row.names = F)
## County
df_county <- df_incidence2.1 |>
dplyr::select(county, contains("cases")) |>
mutate(
catt_cases = ifelse(catt_cases >= 69, round(mean(catt_cases, na.rm = T)), catt_cases),
goat_cases = ifelse(goat_cases > 28, round(mean(goat_cases, na.rm = T)), goat_cases)
) |>
group_by(county) |>
summarise(across(where(is.numeric), ~round(sum(., na.rm = T))))
df_incidence2_trend <- df_incidence2.1 |>
dplyr::select(date,
county,
diseases,
diagnosis,
contains("cases"),
catt_pop,
goat_pop,
sheep_pop,
cam_pop) |>
mutate(year = year(as.Date(date))) |>
merge(pop, by = c("county", "year"))
df_tot_cases_trend <- df_incidence2_trend |>
group_by(date) |>
summarise(across(contains("cases"), ~ sum(., na.rm = T))) |>
mutate(across(contains('cases'), ~ifelse(. == 0, NA, .)))
df_tot_pop_trend <- df_incidence2_trend |>
dplyr::select(date, county, contains("pop")) %>%
distinct(.) |>
as_tibble() |>
group_by(date) %>%
summarise(
sheep_pop = sum(sheep_pop),
goat_pop = sum(goat_pop),
cam_pop = sum(cam_pop),
catt_pop = sum(catt_pop),
hum_pop = sum(pop)
) %>%
as_tibble()
df_1_trend <- df_tot_cases_trend |>
merge(df_tot_pop_trend, by = "date") |>
filter(!is.na(date)) |>
mutate(
human_incidence = round((hum_cases / hum_pop) * 1000, 4),
catt_incidence = round((catt_cases / catt_pop) * 1000000, 4),
cam_incidence = round((cam_cases / cam_pop) * 1000000, 4),
goat_incidence = round((goat_cases / goat_pop) * 1000000, 4),
shp_incidence = round((shp_cases / sheep_pop) * 1000000, 4),
date = as.Date(date)
) |>
dplyr::select(date, contains("incidence")) |>
as_tibble() |>
mutate(
)
write.csv(df_1_trend, "individual_incidence.csv")
df_1_trend_complete <- df_1_trend |>
dplyr::select(date, human_incidence, catt_incidence, goat_incidence) |>
filter(!is.na(catt_incidence)) |>
mutate(across(where(is.numeric), ~ifelse(is.na(.), 0, .)))
# Cases
df_1_trend_cases <- df_tot_cases_trend |>
merge(df_tot_pop_trend, by = "date") |>
filter(!is.na(date)) |>
mutate(
human_incidence = round((hum_cases / hum_pop) * 1000, 4),
catt_incidence = round((catt_cases / catt_pop) * 1000000, 4),
cam_incidence = round((cam_cases / cam_pop) * 1000000, 4),
goat_incidence = round((goat_cases / goat_pop) * 1000000, 4),
shp_incidence = round((shp_cases / sheep_pop) * 1000000, 4),
date = as.Date(date)
) |>
dplyr::select(date, contains(c("incidence", "cases"))) |>
as_tibble() |>
mutate(
)
write.csv(df_1_trend_cases, "individual_incidence_cases.csv")
## The differenced one
date <- df_1_trend$date[-1]
df_1_trend_diff <- df_1_trend |>
reframe(across(contains("incidence"), ~ diff(., na.rm = T))) |>
mutate(date = as.Date(date))
df_cum_trend <- df_tot_cases_trend |>
merge(df_tot_pop_trend, by = "date") |>
filter(!is.na(date)) |>
rowwise() |>
mutate(animal_cases = sum(catt_cases, goat_cases, shp_cases, cam_cases, na.rm = T),
animal_pop = sum(catt_pop, goat_pop, sheep_pop, cam_pop, na.rm = T),
# animal_cases = ifelse(animal_cases == 0, NA, animal_cases),
human_incidence = round((hum_cases / hum_pop) * 1000, 4),
animal_incidence = round((animal_cases / animal_pop) * 1000000, 4)
) |>
dplyr::select(date, contains("incidence"))
write.csv(df_cum_trend, "combined_incidence.csv")
# Cases
df_cum_trend_cases <- df_tot_cases_trend |>
merge(df_tot_pop_trend, by = "date") |>
filter(!is.na(date)) |>
rowwise() |>
mutate(animal_cases = sum(catt_cases, goat_cases, shp_cases, cam_cases, na.rm = T),
animal_pop = sum(catt_pop, goat_pop, sheep_pop, cam_pop, na.rm = T),
# animal_cases = ifelse(animal_cases == 0, NA, animal_cases),
human_incidence = round((hum_cases / hum_pop) * 1000, 4),
animal_incidence = round((animal_cases / animal_pop) * 1000000, 4)
) |>
dplyr::select(date, contains(c("incidence", "cases")))
write.csv(df_cum_trend_cases, "combined_incidence_cases.csv")
# The differenced one
df_cum_trend_diff <- df_cum_trend |>
arrange(date) |>
as.data.frame() |>
reframe(across(c(human_incidence, animal_incidence), ~ diff(., 1, na.rm = T))) |>
mutate(date = as.Date(date))
trend_data <- df_1_trend %>%
pivot_longer(cols = -date) %>%
mutate(
name = factor(name, levels = unique(name)),
name = factor(name, labels = c(
"Human Incidence", "Cattle Incidence", "Goat Incidence",
"Sheep Incidence", "Camel Incidence"
))
)
all_plus_hum <- df_cum_trend |>
#filter(!is.na(animal_incidence)) |>
mutate(animal_incidence = ifelse(is.na(animal_incidence), 0, animal_incidence)) |>
ggplot(aes(date)) +
geom_point(aes(y = animal_incidence), col = "black", size = 1) +
geom_line(aes(y = animal_incidence), col = "black", linewidth = 1) +
theme_light() +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Animal Incidence") +
ggtitle('Animal Incidence')
all_plus_hum
# All except humans
species_plt <- trend_data %>%
filter(name != "Human Incidence") |>
mutate(value = ifelse(is.na(value), 0, value)) |>
ggplot(aes(x = date)) +
geom_line(aes(y = value, col = name), linewidth = 1) +
geom_point(aes(y = value, col = name), size = 2) +
theme_light() +
#facet_wrap(~name, scales = "free", ncol = 3) +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000,000 population") +
xlab("Year") +
labs(col = "Species", title = "Incidence rate for cattle, goats, sheep and camels")
species_plt
# Humans
humans_plt <- trend_data %>%
filter(name == "Human Incidence") |>
mutate(value = ifelse(is.na(value), 0, value)) |>
ggplot(aes(x = date)) +
geom_line(aes(y = value), linewidth = 1) +
geom_point(aes(y = value), size = 2) +
theme_light() +
#facet_wrap(~name, scales = "free", ncol = 3) +
theme(
strip.background = element_rect(fill = "white", colour = "grey"),
strip.text = element_text(color = "black", size = 12),
axis.title = element_text(colour = "black"),
axis.text = element_text(color = "black"),
axis.ticks = element_line(color = "black", linewidth = 1),
plot.title = element_text(color = "black", hjust = 0.5, size = 12),
axis.title.y = element_text(color = "black", size = 10),
legend.position = "bottom",
legend.text = element_text(color = "black")
) +
ylab("Incidence/1,000 population") +
xlab("Year") +
labs(col = "Species", title = "Incidence rate for humans")
humans_plt
# At county Level
adf1 <- adf.test(na.omit(df_1$human_incidence))
adf2 <- adf.test(na.omit(df_1$catt_incidence))
adf3 <- adf.test(na.omit(df_1$cam_incidence))
adf4 <- adf.test(na.omit(df_1$goat_incidence))
adf5 <- adf.test(na.omit(df_1$shp_incidence))
adf_res <- data.frame(
variable = c(
"Human Incidence",
"Cattle Incidence",
"Camel Incidence",
"Goat Incidence",
"Sheep Incidence"
),
statistic = c(
adf1$statistic,
adf2$statistic,
adf3$statistic,
adf4$statistic,
adf5$statistic
),
`P Value` = c(
adf1$p.value,
adf2$p.value,
adf3$p.value,
adf4$p.value,
adf5$p.value
)
) %>%
mutate(across(where(is.numeric), ~round(., 3))) |>
knitr::kable(
align = "l",
caption = "Results of Augmented Dickey-Fuller Test for Stationarity at County Level",
format = "pipe",
latex_options = "hold_position"
)
# At National Level
adf_trend1 <- adf.test(na.omit(df_1_trend$human_incidence))
adf_trend2 <- adf.test(na.omit(df_1_trend$catt_incidence))
adf_trend3 <- adf.test(na.omit(df_1_trend$cam_incidence))
adf_trend4 <- adf.test(na.omit(df_1_trend$goat_incidence))
adf_trend5 <- adf.test(na.omit(df_1_trend$shp_incidence))
adf_trend_res <- data.frame(
Variable = c(
"Human Incidence",
"Cattle Incidence",
"Camel Incidence",
"Goat Incidence",
"Sheep Incidence"
),
Statistic = c(
adf_trend1$statistic,
adf_trend2$statistic,
adf_trend3$statistic,
adf_trend4$statistic,
adf_trend5$statistic
),
`P Value` = c(
adf_trend1$p.value,
adf_trend2$p.value,
adf_trend3$p.value,
adf_trend4$p.value,
adf_trend5$p.value
)
) |>
mutate(across(where(is.numeric), ~round(., 3))) |>
knitr::kable(
align = "l",
caption = "Results of Augmented Dickey-Fuller Test for Stationarity at National Level",
format = "pipe",
latex_options = "hold_position"
)
## All incidences combined
adf_combined <- adf.test(na.omit(df_cum$animal_incidence))
adf_combined_trend <- adf.test(df_cum_trend$animal_incidence)
adf_combined_results <- data.frame(
"Level" = c("County", "National"),
"Statistic" = c(adf_combined$statistic, adf_combined_trend$statistic),
"P Value" = c(adf_combined$p.value, adf_combined_trend$p.value)
)
adf_combined_trend <- adf.test(df_cum_trend$animal_incidence)
adf_combined_trend
q()
