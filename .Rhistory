feasts,
cowplot,
broom,
kableExtra,
readxl,
stringi,
stringr,
rKenyaCensus,
knitr,
purrr,
RColorBrewer
)
}
# Importing Data
p09 <- read_excel("Projections.xlsx",
sheet = "2009")
p19 <- read_excel("Projections.xlsx",
sheet = "2019")
df_incidence <- fread("all_bruc_incidence.csv")
df_numbers <- fread("all_bruc_pop.csv")
shp <- st_read("shapefiles/County.shp", quiet = T)
eco_zones <- fread("eco_zones_county.csv")
shp <- st_read("shapefiles/County.shp", quiet = T)
# Importing packages
if (require(pacman))
{
p_load(
tidyverse,
tseries,
data.table,
scales,
zoo,
forecast,
sf,
patchwork,
grid,
fable,
patchwork,
xts,
feasts,
cowplot,
broom,
kableExtra,
readxl,
stringi,
stringr,
rKenyaCensus,
knitr,
purrr,
RColorBrewer
)
}
# Importing Data
p09 <- read_excel("Projections.xlsx",
sheet = "2009")
p19 <- read_excel("Projections.xlsx",
sheet = "2019")
df_incidence <- fread("all_bruc_incidence.csv")
df_numbers <- fread("all_bruc_pop.csv")
shp <- st_read("shapefiles/County.shp", quiet = T)
eco_zones <- fread("eco_zones_county.csv")
shp <- st_read("shapefiles/County.shp", quiet = T)
# 2009
colnames(p09) <- p09[1,] #Make the 1st row the header
p09 <- p09[-1, ]  #Remove the 1st row
p09_clean <- p09 |>
filter(
!County %in% c(
"Kenya",
"Central",
"Coast",
"Eastern",
"Western",
"N. Eastern",
"Nyanza",
"R. Valley"
)
) |>
distinct() |>
select(County, "2014", "2015")
# 2019
p19_clean <- p19 |>
select(County, "2020", "2021", "2022", "2023", "2024", "2025") |>
setNames(c("County", "pop2020", "pop2021", "pop2022", "pop2023", "pop2024", "pop2025")) |>
na.omit() |>
mutate(across(2:7, ~ as.numeric(str_remove(., ","))),
across(2:7, ~ . * 1000))
p19_clean2 <- p19_clean |>
filter(County != "Kenya") |>
pivot_longer(
cols = -County,
names_to = "Year",
values_to = "pop"
) |>
arrange()
p19_clean2_kenya <- p19_clean |>
filter(County == "Kenya") |>
pivot_longer(
cols = -County,
names_to = "Year",
values_to = "pop"
) |>
arrange() |>
select(County,Year, pop) |>
mutate(Year = str_replace(Year, "pop", "") |> str_squish() |> as.numeric())
write.csv(p19_clean2_kenya, "kenya_pop_2020_2025.csv")
# Growth Rate
p19_growth <- p19_clean2 |>
group_by(County) |>
arrange(County, Year) |>
mutate(growth_rate = (pop - lag(pop)) / lag(pop) * 100) |>
group_by(County) |>
summarise(growth_rate = mean(growth_rate, na.rm = T) |> round(2))
write.csv(p19_growth, "growthrate.csv")
# 2019 Population
pop <- rKenyaCensus::V1_T2.2 |>
select(County, pop2019 = Total) |>
filter(!County %in% c("Total")) |>
arrange(County) |>
mutate(County = case_when(
County == "Elgeyo/Marakwet" ~ "Elgeyo Marakwet",
County == "Nairobi City" ~ "Nairobi",
County == "Taita/Taveta" ~ "Taita Taveta",
County == "Tharaka-Nithi" ~ "Tharaka Nithi",
TRUE ~ County
)) |>
merge(p19_growth, by = "County") |>
mutate(
pop2018 = round(pop2019 * (1 - (growth_rate / 100))),
pop2017 = round(pop2018 * (1 - (growth_rate / 100))),
pop2016 = round(pop2017 * (1 - (growth_rate / 100))),
pop2015 = round(pop2016 * (1 - (growth_rate / 100))),
pop2014 = round(pop2015 * (1 - (growth_rate / 100)))
) |>
merge(p19_clean |> select(1:4), by = "County") |>
select(County,
pop2014,
pop2015,
pop2016,
pop2017,
pop2018,
pop2019,
pop2020,
pop2021
) |>
pivot_longer(
cols = -County,
values_to = "pop"
) |>
mutate(year = case_when(
name == "pop2014" ~ 2014,
name == "pop2015" ~ 2015,
name == "pop2016" ~ 2016,
name == "pop2017" ~ 2017,
name == "pop2018" ~ 2018,
name == "pop2019" ~ 2019,
name == "pop2020" ~ 2020,
name == "pop2021" ~ 2021
)) |>
select(county = County, year, pop)
write.csv(pop, "population_county_2014_2021.csv")
# Cases per year per county
df_incidence2.1 <- df_incidence |>
select(date,
county,
diseases,
diagnosis,
contains("cases"),
catt_pop,
goat_pop,
sheep_pop,
cam_pop) |>
mutate(year = year(date)) |>
merge(pop, by = c("county", "year"), all = T) |>
filter(!is.na(year))
# Identifying the outliers in the number of cases
numeric_columns <- df_incidence2.1 %>%
select(contains('cases')) |>
keep(is.numeric)
numeric_columns %>%
map(~summary(.))
numeric_columns %>%
imap(
~ ggplot(data = data.frame(y = .x)) +
geom_boxplot(aes(x = 1, y = y)) +
labs(title = .y) +
theme_light()
)
# Replacing the outliers with the mean
df_incidence2 <- df_incidence2.1 |>
mutate(
catt_cases = ifelse(catt_cases >= 69, round(mean(catt_cases, na.rm = T)), catt_cases),
goat_cases = ifelse(goat_cases > 28, round(mean(goat_cases, na.rm = T)), goat_cases)
)
df_tot_cases <- df_incidence2 |>
group_by(date, county) |>
summarise(across(contains("cases"), ~ sum(., na.rm = T)))
# Population per year, per county
df_pop <- df_incidence2 |>
select(date, county, contains("pop")) %>%
distinct(.) |>
as_tibble() |>
group_by(date, county) %>%
summarise(across(where(is.numeric), ~unique(.)))
df_1 <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
filter(!is.na(date)) |>
mutate(
human_incidence = round((hum_cases / pop) * 1000, 4),
catt_incidence = round((catt_cases / catt_pop) * 1000000, 4),
cam_incidence = round((cam_cases / cam_pop) * 1000000, 4),
goat_incidence = round((goat_cases / goat_pop) * 1000000, 4),
shp_incidence = round((shp_cases / sheep_pop) * 1000000, 4)
) |>
select(date, county, contains(c("incidence", "cases"))) |>
as_tibble() |>
arrange(county)
df_1_pop <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
select(date, county, pop)
write.csv(df_1_pop, 'county_humanpop.csv', row.names = F)
df_1_complete <- df_1 |>
select(date, county, human_incidence, catt_incidence, goat_incidence, hum_cases, catt_cases, goat_cases) |>
filter(catt_incidence > 0)
write.csv(df_1_complete, "df_1_complete.csv", row.names = F)
# Outliers
numeric_columns <- df_1 %>%
select(contains('incidence')) |>
keep(is.numeric)
numeric_columns %>%
map(~summary(.))
numeric_columns %>%
imap(
~ ggplot(data = data.frame(y = .x)) +
geom_boxplot(aes(x = 1, y = y)) +
labs(title = .y) +
theme_light()
)
df_cum <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
filter(!is.na(date)) |>
rowwise() |>
mutate(
animal_cases = sum(catt_cases, goat_cases, shp_cases, cam_cases, na.rm = T),
animal_pop = sum(catt_pop, goat_pop, sheep_pop, cam_pop, na.rm = T),
animal_cases = ifelse(animal_cases == 0, NA, animal_cases),
animal_incidence = round((animal_cases / animal_pop) * 1000000, 4),
human_incidence = round((hum_cases / pop) * 1000, 4)
) |>
select(date, county, contains(c("incidence", 'cases'))) |>
as_tibble() |>
mutate()
df_cum_complete <- df_cum |>
select(date, county, human_incidence, animal_incidence, animal_cases, hum_cases) |>
filter(animal_incidence > 0)
write.csv(df_cum_complete, "df_cum_complete.csv", row.names = F)
## County
df_county <- df_incidence |>
select(county, contains("cases")) |>
mutate(
catt_cases = ifelse(catt_cases >= 69, round(mean(catt_cases, na.rm = T)), catt_cases),
goat_cases = ifelse(goat_cases > 28, round(mean(goat_cases, na.rm = T)), goat_cases)
) |>
group_by(county) |>
summarise(across(where(is.numeric), ~round(sum(., na.rm = T))))
df_incidence
df_incidence <- fread("all_bruc_incidence.csv")
df_incidence
df_incidence
# Cases per year per county
df_incidence2.1 <- df_incidence |>
select(date,
county,
diseases,
diagnosis,
contains("cases"),
catt_pop,
goat_pop,
sheep_pop,
cam_pop) |>
mutate(year = year(date)) |>
merge(pop, by = c("county", "year"), all = T) |>
filter(!is.na(year))
df_incidence2.1
??year
>year
?year
# Cases per year per county
df_incidence2.1 <- df_incidence |>
select(date,
county,
diseases,
diagnosis,
contains("cases"),
catt_pop,
goat_pop,
sheep_pop,
cam_pop) |>
mutate(year = lubridate::year(date)) |>
merge(pop, by = c("county", "year"), all = T) |>
filter(!is.na(year))
df_incidence2.1
df_incidence2.1
df_incidence
df_incidence
df_incidence <- fread("all_bruc_incidence.csv")
df_incidence
# Cases per year per county
df_incidence2.1 <- df_incidence |>
select(date,
county,
diseases,
diagnosis,
contains("cases"),
catt_pop,
goat_pop,
sheep_pop,
cam_pop) |>
mutate(year = lubridate::year(as.Date(date))) |>
merge(pop, by = c("county", "year"), all = T) |>
filter(!is.na(year))
# Cases per year per county
df_incidence2.1 <- df_incidence |>
select(date,
county,
diseases,
diagnosis,
contains("cases"),
catt_pop,
goat_pop,
sheep_pop,
cam_pop) |>
mutate(year = lubridate::year(date)) |>
merge(pop, by = c("county", "year"), all = T) |>
filter(!is.na(year))
# Identifying the outliers in the number of cases
numeric_columns <- df_incidence2.1 %>%
select(contains('cases')) |>
keep(is.numeric)
numeric_columns %>%
map(~summary(.))
numeric_columns %>%
imap(
~ ggplot(data = data.frame(y = .x)) +
geom_boxplot(aes(x = 1, y = y)) +
labs(title = .y) +
theme_light()
)
numeric_columns %>%
imap(
~ ggplot(data = data.frame(y = .x)) +
geom_boxplot(aes(x = 1, y = y)) +
labs(title = .y) +
theme_light()
)
# Replacing the outliers with the mean
df_incidence2 <- df_incidence2.1 |>
mutate(
catt_cases = ifelse(catt_cases >= 69, round(mean(catt_cases, na.rm = T)), catt_cases),
goat_cases = ifelse(goat_cases > 28, round(mean(goat_cases, na.rm = T)), goat_cases)
)
df_tot_cases <- df_incidence2 |>
group_by(date, county) |>
summarise(across(contains("cases"), ~ sum(., na.rm = T)))
# Population per year, per county
df_pop <- df_incidence2 |>
select(date, county, contains("pop")) %>%
distinct(.) |>
as_tibble() |>
group_by(date, county) %>%
summarise(across(where(is.numeric), ~unique(.)))
df_1 <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
filter(!is.na(date)) |>
mutate(
human_incidence = round((hum_cases / pop) * 1000, 4),
catt_incidence = round((catt_cases / catt_pop) * 1000000, 4),
cam_incidence = round((cam_cases / cam_pop) * 1000000, 4),
goat_incidence = round((goat_cases / goat_pop) * 1000000, 4),
shp_incidence = round((shp_cases / sheep_pop) * 1000000, 4)
) |>
select(date, county, contains(c("incidence", "cases"))) |>
as_tibble() |>
arrange(county)
df_1_pop <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
select(date, county, pop)
write.csv(df_1_pop, 'county_humanpop.csv', row.names = F)
df_1_complete <- df_1 |>
select(date, county, human_incidence, catt_incidence, goat_incidence, hum_cases, catt_cases, goat_cases) |>
filter(catt_incidence > 0)
write.csv(df_1_complete, "df_1_complete.csv", row.names = F)
# Outliers
numeric_columns <- df_1 %>%
select(contains('incidence')) |>
keep(is.numeric)
numeric_columns %>%
map(~summary(.))
numeric_columns %>%
imap(
~ ggplot(data = data.frame(y = .x)) +
geom_boxplot(aes(x = 1, y = y)) +
labs(title = .y) +
theme_light()
)
df_cum <- df_tot_cases |>
merge(df_pop, by = c("date", "county")) |>
filter(!is.na(date)) |>
rowwise() |>
mutate(
animal_cases = sum(catt_cases, goat_cases, shp_cases, cam_cases, na.rm = T),
animal_pop = sum(catt_pop, goat_pop, sheep_pop, cam_pop, na.rm = T),
animal_cases = ifelse(animal_cases == 0, NA, animal_cases),
animal_incidence = round((animal_cases / animal_pop) * 1000000, 4),
human_incidence = round((hum_cases / pop) * 1000, 4)
) |>
select(date, county, contains(c("incidence", 'cases'))) |>
as_tibble() |>
mutate()
df_cum_complete <- df_cum |>
select(date, county, human_incidence, animal_incidence, animal_cases, hum_cases) |>
filter(animal_incidence > 0)
write.csv(df_cum_complete, "df_cum_complete.csv", row.names = F)
## County
df_county <- df_incidence |>
select(county, contains("cases")) |>
mutate(
catt_cases = ifelse(catt_cases >= 69, round(mean(catt_cases, na.rm = T)), catt_cases),
goat_cases = ifelse(goat_cases > 28, round(mean(goat_cases, na.rm = T)), goat_cases)
) |>
group_by(county) |>
summarise(across(where(is.numeric), ~round(sum(., na.rm = T))))
df_incidence2_trend <- df_incidence2 |>
select(date,
county,
diseases,
diagnosis,
contains("cases"),
catt_pop,
goat_pop,
sheep_pop,
cam_pop) |>
mutate(year = year(date)) |>
merge(pop, by = c("county", "year"))
df_incidence2
df_incidence2
df_incidence2_trend <- df_incidence2 |>
select(date,
county,
diseases,
diagnosis,
contains("cases"),
catt_pop,
goat_pop,
sheep_pop,
cam_pop) |>
mutate(year = year(as.Date(date))) |>
merge(pop, by = c("county", "year"))
# Cases per year per county
df_tot_cases_spatial <- df_incidence2 |>
group_by(year = year(as.Date(date)), county) |>
summarise(across(contains("cases"), ~ sum(., na.rm = T))) |>
mutate(across(contains('cases'), ~ifelse(. == 0, NA, .)))
# Population per year, per county
df_pop_spatial <- df_incidence2 |>
select(date, county, contains("pop")) %>%
distinct(.) |>
as_tibble() |>
group_by(year = year(date), county) %>%
summarise(across(where(is.numeric), ~unique(.))) |>
mutate(across(contains('cases'), ~ifelse(. == 0, NA, .)))
# Population per year, per county
df_pop_spatial <- df_incidence2 |>
select(date, county, contains("pop")) %>%
distinct(.) |>
as_tibble() |>
group_by(year = year(as.Date(date)), county) %>%
summarise(across(where(is.numeric), ~unique(.))) |>
mutate(across(contains('cases'), ~ifelse(. == 0, NA, .)))
# Individual Cases per year per county month
df_tot_cases_spatial_month <- df_incidence2 |>
group_by(date, county) |>
summarise(across(contains("cases"), ~ sum(., na.rm = T))) |>
mutate(year = year(date)) |>
merge(df_pop_spatial, by = c("year", "county")) |>
filter(!is.na(year)) |>
mutate(
human_incidence = round((hum_cases / pop) * 1000, 4),
catt_incidence = round((catt_cases / catt_pop) * 1000000, 4),
cam_incidence = round((cam_cases / cam_pop) * 1000000, 4),
goat_incidence = round((goat_cases / goat_pop) * 1000000, 4),
shp_incidence = round((shp_cases / sheep_pop) * 1000000, 4)
) |>
select(year, date, county, contains(c("incidence", "cases"))) |>
as_tibble()
# Individual Cases per year per county month
df_tot_cases_spatial_month <- df_incidence2 |>
group_by(date, county) |>
summarise(across(contains("cases"), ~ sum(., na.rm = T))) |>
mutate(year = year(as.Date)) |>
merge(df_pop_spatial, by = c("year", "county")) |>
filter(!is.na(year)) |>
mutate(
human_incidence = round((hum_cases / pop) * 1000, 4),
catt_incidence = round((catt_cases / catt_pop) * 1000000, 4),
cam_incidence = round((cam_cases / cam_pop) * 1000000, 4),
goat_incidence = round((goat_cases / goat_pop) * 1000000, 4),
shp_incidence = round((shp_cases / sheep_pop) * 1000000, 4)
) |>
select(year, date, county, contains(c("incidence", "cases"))) |>
as_tibble()
q()
